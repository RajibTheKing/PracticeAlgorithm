Reference: https://www.geeksforgeeks.org/find-lca-in-binary-tree-using-rmq/

Algorithm:
---------------------
01) Do a Euler tour on the tree, and fill the euler, level and first occurrence arrays.
02) Using the first occurrence array, get the indices corresponding to the two nodes which 
    will be the corners of the range in the level array that is fed to the RMQ algorithm 
    for the minimum value.
03) Once the algorithm return the index of the minimum level in the range, we use it to 
    determine the LCA using Euler tour array.



Time complexity:
----------------------
**  Euler tour: Number of nodes is V. For a tree, E = V-1. Euler tour (DFS) will take O(V+E) 
    which is O(2*V) which can be written as O(V).
**  Segment Tree construction : O(n) where n = V + E = 2*V – 1.
**  Range Minimum query: O(log(n))

Space complexity:
----------------------

** Euler tour array: O(n) where n = 2*V – 1
** Node Levels array: O(n)
** First Occurrences array: O(V)
** Segment Tree: O(n)